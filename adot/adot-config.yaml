receivers:
  # X-Ray Daemonの代替
  awsxray:
    transport: udp
  # メインアプリケーションにPrometheusの/metricsに対応するエンドポイントを設置
  # Prometheus形式でScrape設定
  prometheus:
    config:
      global:
        scrape_interval: 15s
        scrape_timeout: 10s
      scrape_configs:
        - job_name: "cnis-ecs-container-app"
          static_configs:
            - targets: [ 0.0.0.0:80 ]
  # https://aws-otel.github.io/docs/components/ecs-metrics-receiver
  # ECSのコンテナメトリクス用
  awsecscontainermetrics:
    collection_interval: 10s

processors:
  filter:
    metrics:
      include:
        match_type: strict
        metric_names:
          - ecs.task.memory.utilized
          - ecs.task.memory.reserved
          - ecs.task.cpu.utilized
          - ecs.task.cpu.reserved
          - ecs.task.network.rate.rx
          - ecs.task.network.rate.tx
          - ecs.task.storage.read_bytes
          - ecs.task.storage.write_bytes

exporters:
  awsprometheusremotewrite:
    # 今回はAMPのリモート書き込みエンドポイントを設定
    endpoint: MY_REMOTE_WRITE_ENDPOINT
    aws_auth:
      region: MY_REGION
      service: "aps"
  awsxray:
    region: MY_REGION
  logging:
    loglevel: info

extensions:
  health_check:
  pprof:
    endpoint: :1888
  zpages:
    endpoint: :55679

service:
  extensions: [pprof, zpages, health_check]
  pipelines:
    metrics:
      receivers: [prometheus]
      exporters: [logging, awsprometheusremotewrite]
    metrics/ecs:
      receivers: [awsecscontainermetrics]
      processors: [filter]
      exporters: [logging, awsprometheusremotewrite]
    traces:
      receivers: [awsxray]
      exporters: [awsxray]
